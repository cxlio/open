{"index":[{"id":22,"name":"InternalKeyboardLayout","kind":4,"type":{"kind":33,"children":[{"kind":6,"type":17}],"type":22},"children":[{"id":23,"name":"modKey","kind":10,"flags":4,"docs":{"content":[{"value":"An array of characters that appear when a key is pressed with the 'Shift' key."}]},"type":{"kind":5,"resolvedType":{"kind":5,"children":[{"name":"\"ctrlKey\"","kind":23},{"name":"\"metaKey\"","kind":23}]},"children":[{"name":"'ctrlKey'","kind":23},{"name":"'metaKey'","kind":23}]}}]},{"id":1,"name":"Key","kind":4,"children":[{"id":3,"name":"altKey","kind":10,"flags":4,"type":"boolean"},{"id":7,"name":"code","kind":10,"flags":4,"type":"string"},{"id":2,"name":"ctrlKey","kind":10,"flags":4,"type":"boolean"},{"id":6,"name":"key","kind":10,"flags":4,"type":"string"},{"id":5,"name":"metaKey","kind":10,"flags":4,"type":"boolean"},{"id":4,"name":"shiftKey","kind":10,"flags":4,"type":"boolean"}]},{"id":17,"name":"KeyboardLayout","kind":4,"flags":1,"docs":{"content":[{"value":"The `KeyboardLayout` interface describes how a keyboard layout should be structured internally."}]},"children":[{"id":19,"name":"modKey","kind":10,"flags":524292,"docs":{"content":[{"value":"Indicates whether the 'meta' or 'ctrl' key is the primary modifier used for commands,\ndiffering based on the operating system (e.g., 'metaKey' for macOS)."}]},"type":{"kind":5,"resolvedType":{"kind":5,"children":[{"name":"\"ctrlKey\"","kind":23},{"name":"\"metaKey\"","kind":23}]},"children":[{"name":"'ctrlKey'","kind":23},{"name":"'metaKey'","kind":23}]}},{"id":18,"name":"shiftMap","kind":10,"flags":4,"docs":{"content":[{"value":"A mapping of shifted keys to their non-shifted counterparts, used to accurately\ninterpret which character a shifted key press represents."}]},"type":"Record"},{"id":20,"name":"translate","parameters":[{"id":21,"name":"ev","kind":9,"type":{"id":1,"name":"Key","kind":4,"children":[{"id":3,"name":"altKey","kind":10,"flags":4,"type":"boolean"},{"id":7,"name":"code","kind":10,"flags":4,"type":"string"},{"id":2,"name":"ctrlKey","kind":10,"flags":4,"type":"boolean"},{"id":6,"name":"key","kind":10,"flags":4,"type":"string"},{"id":5,"name":"metaKey","kind":10,"flags":4,"type":"boolean"},{"id":4,"name":"shiftKey","kind":10,"flags":4,"type":"boolean"}]}}],"kind":11,"flags":4,"docs":{"content":[{"value":"Describes a function that translates a `Key` object (representing a keyboard event) to a character string."}]},"type":"string"}],"tsconfig":"tsconfig.json"},{"id":8,"name":"KeyboardOptions","kind":4,"flags":1,"docs":{"content":[{"value":"The `KeyboardOptions` interface defines the configuration needed to handle keyboard interactions with\na specific HTML element."}]},"children":[{"id":16,"name":"capture","kind":10,"flags":524292,"docs":{"content":[{"value":"Boolean indicating whether to capture key events in the capture phase.\nThis determines when the event listener reacts in the event propagation flow."}]},"type":"boolean"},{"id":14,"name":"delay","kind":10,"flags":524292,"docs":{"content":[{"value":"The time in milliseconds to wait between key presses before resetting the sequence.\nDefaults to 250ms if not provided, ensuring thoughtful key sequences rather than accidental key presses."}]},"type":"number"},{"id":9,"name":"element","kind":10,"flags":4,"docs":{"content":[{"value":"Specifies the HTML element on which keyboard events are captured.\nThis element will receive focus and listen for key events."}]},"type":"HTMLElement"},{"id":15,"name":"layout","kind":10,"flags":524292,"docs":{"content":[{"value":"Optional parameter to specify a custom `KeyboardLayout`.\nDefaults to 'en-US' if not provided. This affects how key combinations and modifier keys are interpreted."}]},"type":17},{"id":10,"name":"onKey","kind":10,"flags":4,"docs":{"content":[{"value":"A callback function that processes key events. It receives the current key being pressed\nand the sequence of keys accumulated so far. It returns `true` or `false` to indicate whether\nthe sequence was consumed."}]},"type":{"id":11,"parameters":[{"id":12,"name":"key","kind":9,"type":"string"},{"id":13,"name":"sequence","kind":9,"type":"string[]"}],"kind":17,"type":"boolean"}}],"tsconfig":"tsconfig.json"}]}