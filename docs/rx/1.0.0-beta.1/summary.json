{"index":[{"id":253,"name":"BehaviorSubject","kind":8,"flags":1,"docs":{"content":[{"value":"A variant of Subject that requires an initial value and emits its current value whenever it is subscribed to."},{"tag":"see","value":"be"}]},"type":{"kind":33,"children":[{"kind":6,"type":207}],"type":253},"typeP":[{"id":254,"name":"T","kind":3,"type":"T"}],"children":[{"id":255,"name":"constructor","parameters":[{"id":256,"name":"currentValue","kind":10,"flags":8,"type":"T"}],"kind":14,"type":253},{"id":256,"name":"currentValue","kind":10,"flags":8,"type":"T"},{"id":258,"name":"next","parameters":[{"id":259,"name":"val","kind":9,"type":"T"}],"kind":11,"flags":4,"type":"void"},{"id":260,"name":"onSubscribe","parameters":[{"id":261,"name":"subscription","kind":9,"type":{"id":88,"name":"Subscriber","kind":34}}],"kind":11,"flags":16,"type":"void"},{"id":257,"name":"value","kind":12,"flags":4,"type":"T"}],"tsconfig":"tsconfig.json"},{"id":231,"name":"CancelSignal","kind":8,"flags":1,"docs":{"content":[{"value":"`CancelSignal` is a specialized `Observable` that signals cancellation to its subscribers.\n\n- Subscribers are notified when the signal is triggered via the `next` method.\n- Once triggered, it completes all current and future subscribers immediately.\n- Subscriptions to this signal will only emit once if the signal is already closed."}]},"type":{"kind":33,"children":[{"kind":6,"type":54}],"type":231},"children":[{"id":232,"name":"closed","kind":10,"flags":4,"type":"boolean"},{"id":245,"name":"constructor","kind":14,"type":231},{"id":246,"name":"next","kind":11,"flags":4,"type":"void"},{"id":233,"name":"observers","kind":10,"flags":16,"type":"Set"}],"tsconfig":"tsconfig.json"},{"id":61,"name":"CombineResult","kind":2,"type":"R extends (infer U)[] ? Observable<Merge<U>> : never","typeP":[{"id":62,"name":"R","kind":3,"type":"R extends Observable<unknown>[]"}],"resolvedType":"R extends (infer U)[] ? Observable<Merge<U>, \"none\"> : never"},{"id":29,"name":"CompleteFunction","kind":2,"type":{"id":30,"kind":17,"type":"void"},"resolvedType":{"id":31,"kind":17,"type":"void"}},{"id":285,"name":"EmptyError","kind":8,"flags":1,"type":{"kind":33,"children":[{"kind":6}],"type":285},"children":[{"id":286,"name":"message","kind":10,"flags":4,"type":"string"}],"tsconfig":"tsconfig.json"},{"id":24,"name":"ErrorFunction","kind":2,"type":{"id":25,"parameters":[{"id":26,"name":"err","kind":9,"type":"ObservableError"}],"kind":17,"type":"void"},"resolvedType":{"id":27,"parameters":[{"id":28,"name":"err","kind":9,"type":"unknown"}],"kind":17,"type":"void"}},{"id":48,"name":"Merge","kind":2,"type":"T extends Observable<infer U extends U> ? U : never","typeP":[{"id":49,"name":"T","kind":3,"type":"T"}],"resolvedType":"T extends Observable<infer U extends U, \"none\"> ? U : never"},{"id":18,"name":"NextFunction","kind":2,"type":{"id":20,"parameters":[{"id":21,"name":"val","kind":9,"type":"T"}],"kind":17,"type":"void"},"typeP":[{"id":19,"name":"T","kind":3,"type":"T"}],"resolvedType":{"id":22,"parameters":[{"id":23,"name":"val","kind":9,"type":"T"}],"kind":17,"type":"void"}},{"id":84,"name":"NextObserver","kind":2,"type":{"kind":5,"resolvedType":{"kind":5,"children":[{"name":"NextFunction","kind":6,"typeP":[{"name":"T","kind":6,"type":"T"}]},{"name":"Observer","kind":6,"typeP":[{"name":"T","kind":6,"type":"T"}]},{"name":"undefined","kind":32}]},"children":[{"name":"NextFunction","kind":6,"type":"NextFunction","typeP":[{"name":"T","kind":6,"type":"T"}]},{"name":"Observer","kind":6,"type":{"id":74,"name":"Observer","kind":4,"flags":1,"typeP":[{"id":75,"name":"T","kind":3,"type":"T"}],"children":[{"id":78,"name":"complete","kind":10,"flags":524292,"docs":{"content":[{"value":"The `complete` property within the `Observer` interface is an optional method\nthat signals the successful completion of the Observable's emission sequence.\n\n- If provided, it will be invoked when the Observable has finished emitting all values without an error.\n- This is particularly useful for cleaning up resources or triggering follow-up logic."}]},"type":"CompleteFunction"},{"id":77,"name":"error","kind":10,"flags":524292,"docs":{"content":[{"value":"The `error` property within the `Observer` interface is an optional method\nthat handles errors from the Observable's execution.\n\n- Providing an error handler here allows Observers to manage exceptions locally\n  without propagating them further up the execution chain."}]},"type":"ErrorFunction"},{"id":76,"name":"next","kind":10,"flags":524292,"docs":{"content":[{"value":"The `next` property allows the observer to react to each value emitted by the Observable."}]},"type":"NextFunction"},{"id":79,"name":"signal","kind":10,"flags":524292,"docs":{"content":[{"value":"The `signal` property is an optional Observable that provides a mechanism for external cancellation."}]},"type":54}],"tsconfig":"tsconfig.json"},"typeP":[{"name":"T","kind":6,"type":"T"}]},{"name":"undefined","kind":32}]},"typeP":[{"id":85,"name":"T","kind":3,"type":"T"}],"resolvedType":{"kind":5,"children":[{"name":"NextFunction","kind":6,"typeP":[{"name":"T","kind":6,"type":"T"}]},{"name":"Observer","kind":6,"typeP":[{"name":"T","kind":6,"type":"T"}]},{"name":"undefined","kind":32}]}},{"id":54,"name":"Observable","kind":8,"flags":1,"docs":{"content":[{"value":"A representation of any set of values over any amount of time."}]},"typeP":[{"id":155,"name":"T","kind":3,"type":"T"},{"id":156,"name":"P","kind":3,"type":"P"}],"children":[{"id":158,"name":"___subscribe","kind":10,"flags":16,"type":"SubscribeFunction"},{"id":577,"name":"catchError","parameters":[{"id":579,"name":"selector","kind":9,"type":{"id":580,"parameters":[{"id":581,"name":"err","kind":9,"type":"unknown"},{"id":582,"name":"source","kind":9,"type":54}],"kind":17,"type":{"kind":5,"resolvedType":{"kind":5,"children":[{"name":"Observable","kind":6,"typeP":[{"name":"T2","kind":6,"type":"T2"},{"name":"\"none\"","kind":23,"type":"\"none\""}]},{"name":"void","kind":32}]},"children":[{"name":"Observable","kind":6,"type":"Observable","typeP":[{"name":"T2","kind":6,"type":"T2 extends T | never"}]},{"name":"void","kind":32}]}}}],"kind":11,"flags":4,"type":54,"typeP":[{"id":578,"name":"T2","kind":3,"type":"T2 extends T | never"}]},{"id":157,"name":"constructor","parameters":[{"id":158,"name":"___subscribe","kind":10,"flags":16,"type":"SubscribeFunction"}],"kind":14,"type":54},{"id":583,"name":"debounceTime","parameters":[{"id":584,"name":"time","kind":9,"flags":524288,"type":"number"},{"id":585,"name":"timer","kind":9,"flags":524288,"type":{"id":586,"parameters":[{"id":587,"name":"delay","kind":9,"type":"number"}],"kind":17,"type":54}}],"kind":11,"flags":4,"type":54},{"id":588,"name":"distinctUntilChanged","kind":11,"flags":4,"type":54},{"id":589,"name":"exhaustMap","parameters":[{"id":591,"name":"project","kind":9,"type":{"id":592,"parameters":[{"id":593,"name":"value","kind":9,"type":"T"}],"kind":17,"type":54}}],"kind":11,"flags":4,"type":54,"typeP":[{"id":590,"name":"T2","kind":3,"type":"T2"}]},{"id":594,"name":"filter","parameters":[{"id":596,"name":"fn","kind":9,"type":{"id":597,"parameters":[{"id":598,"name":"val","kind":9,"type":"T"}],"kind":17,"type":"boolean"}}],"kind":11,"flags":4,"type":54,"typeP":[{"id":595,"name":"T2","kind":3,"type":"T2"}]},{"id":599,"name":"finalize","parameters":[{"id":600,"name":"fn","kind":9,"type":{"id":601,"kind":17,"type":"void"}}],"kind":11,"flags":4,"type":54},{"id":602,"name":"first","kind":11,"flags":4,"type":54},{"id":639,"name":"ignoreElements","kind":11,"flags":4,"type":54},{"id":603,"name":"map","parameters":[{"id":605,"name":"mapFn","kind":9,"type":{"id":606,"parameters":[{"id":607,"name":"val","kind":9,"type":"T"}],"kind":17,"type":"T2"}}],"kind":11,"flags":4,"type":54,"typeP":[{"id":604,"name":"T2","kind":3,"type":"T2"}]},{"id":608,"name":"mergeMap","parameters":[{"id":610,"name":"project","kind":9,"type":{"id":611,"parameters":[{"id":612,"name":"val","kind":9,"type":"T"}],"kind":17,"type":54}}],"kind":11,"flags":4,"type":54,"typeP":[{"id":609,"name":"T2","kind":3,"type":"T2"}]},{"id":168,"name":"pipe","parameters":[{"id":170,"name":"a","kind":9,"type":67}],"kind":11,"flags":16388,"type":54,"typeP":[{"id":169,"name":"A","kind":3,"type":"A"}]},{"id":171,"name":"pipe","parameters":[{"id":174,"name":"a","kind":9,"type":67},{"id":175,"name":"b","kind":9,"type":67}],"kind":11,"flags":16388,"type":54,"typeP":[{"id":172,"name":"A","kind":3,"type":"A"},{"id":173,"name":"B","kind":3,"type":"B"}]},{"id":176,"name":"pipe","parameters":[{"id":180,"name":"a","kind":9,"type":67},{"id":181,"name":"b","kind":9,"type":67},{"id":182,"name":"c","kind":9,"type":67}],"kind":11,"flags":16388,"type":54,"typeP":[{"id":177,"name":"A","kind":3,"type":"A"},{"id":178,"name":"B","kind":3,"type":"B"},{"id":179,"name":"C","kind":3,"type":"C"}]},{"id":183,"name":"pipe","parameters":[{"id":188,"name":"a","kind":9,"type":67},{"id":189,"name":"b","kind":9,"type":67},{"id":190,"name":"c","kind":9,"type":67},{"id":191,"name":"d","kind":9,"type":67}],"kind":11,"flags":16388,"type":54,"typeP":[{"id":184,"name":"A","kind":3,"type":"A"},{"id":185,"name":"B","kind":3,"type":"B"},{"id":186,"name":"C","kind":3,"type":"C"},{"id":187,"name":"D","kind":3,"type":"D"}]},{"id":192,"name":"pipe","parameters":[{"id":198,"name":"a","kind":9,"type":67},{"id":199,"name":"b","kind":9,"type":67},{"id":200,"name":"c","kind":9,"type":67},{"id":201,"name":"d","kind":9,"type":67},{"id":202,"name":"e","kind":9,"type":67}],"kind":11,"flags":16388,"type":54,"typeP":[{"id":193,"name":"A","kind":3,"type":"A"},{"id":194,"name":"B","kind":3,"type":"B"},{"id":195,"name":"C","kind":3,"type":"C"},{"id":196,"name":"D","kind":3,"type":"D"},{"id":197,"name":"E","kind":3,"type":"E"}]},{"id":203,"name":"pipe","parameters":[{"id":204,"name":"extra","kind":9,"flags":262144,"type":"[Operator<T, unknown>, ...Operator<unknown, unknown>[]]"}],"kind":11,"flags":4,"docs":{"content":[{"value":"Used to stitch together functional operators into a chain."}]},"type":54},{"id":613,"name":"publishLast","kind":11,"flags":4,"type":54},{"id":614,"name":"reduce","parameters":[{"id":616,"name":"reduceFn","kind":9,"type":{"id":617,"parameters":[{"id":618,"name":"acc","kind":9,"type":"T2"},{"id":619,"name":"val","kind":9,"type":"T"},{"id":620,"name":"i","kind":9,"type":"number"}],"kind":17,"type":"T2"}},{"id":621,"name":"seed","kind":9,"type":"T2"}],"kind":11,"flags":4,"type":54,"typeP":[{"id":615,"name":"T2","kind":3,"type":"T2"}]},{"id":622,"name":"share","kind":11,"flags":4,"type":54},{"id":623,"name":"shareLatest","kind":11,"flags":4,"type":54},{"id":205,"name":"subscribe","parameters":[{"id":206,"name":"next","kind":9,"flags":524288,"type":"NextObserver"}],"kind":11,"flags":4,"docs":{"content":[{"value":"Invokes an execution of an Observable and registers Observer handlers for notifications it will emit."}]},"type":99},{"id":624,"name":"switchMap","parameters":[{"id":626,"name":"project","kind":9,"type":{"id":627,"parameters":[{"id":628,"name":"val","kind":9,"type":"T"}],"kind":17,"type":54}}],"kind":11,"flags":4,"type":54,"typeP":[{"id":625,"name":"T2","kind":3,"type":"T2"}]},{"id":629,"name":"take","parameters":[{"id":630,"name":"howMany","kind":9,"type":"number"}],"kind":11,"flags":4,"type":54},{"id":631,"name":"takeWhile","parameters":[{"id":632,"name":"fn","kind":9,"type":{"id":633,"parameters":[{"id":634,"name":"val","kind":9,"type":"T"}],"kind":17,"type":"boolean"}}],"kind":11,"flags":4,"type":54},{"id":635,"name":"tap","parameters":[{"id":636,"name":"tapFn","kind":9,"type":{"id":637,"parameters":[{"id":638,"name":"val","kind":9,"type":"T"}],"kind":17,"type":"void"}}],"kind":11,"flags":4,"type":54},{"id":159,"name":"then","parameters":[{"id":162,"name":"resolve","kind":9,"type":{"id":163,"parameters":[{"id":164,"name":"val","kind":9,"type":"P extends 'emit1' ? T : T | undefined"}],"kind":17,"type":"R"}},{"id":165,"name":"reject","kind":9,"flags":524288,"type":{"id":166,"parameters":[{"id":167,"name":"e","kind":9,"type":"E"}],"kind":17,"type":"R"}}],"kind":11,"flags":4,"docs":{"content":[{"value":"The `then` method allows an Observable to act like a Promise.\nIt converts the Observable's emissions into a Promise that resolves on completion."}]},"type":"Promise","typeP":[{"id":160,"name":"E","kind":3,"type":"E"},{"id":161,"name":"R","kind":3,"type":"R"}]},{"id":640,"name":"throttleTime","parameters":[{"id":641,"name":"number","kind":9,"type":"number"}],"kind":11,"flags":4,"type":54}],"tsconfig":"tsconfig.json"},{"id":575,"name":"Observable","kind":4,"flags":131073,"typeP":[{"id":576,"name":"T","kind":3,"type":"T"}],"children":[{"id":577,"name":"catchError","parameters":[{"id":579,"name":"selector","kind":9,"type":{"id":580,"parameters":[{"id":581,"name":"err","kind":9,"type":"unknown"},{"id":582,"name":"source","kind":9,"type":54}],"kind":17,"type":{"kind":5,"resolvedType":{"kind":5,"children":[{"name":"Observable","kind":6,"typeP":[{"name":"T2","kind":6,"type":"T2"},{"name":"\"none\"","kind":23,"type":"\"none\""}]},{"name":"void","kind":32}]},"children":[{"name":"Observable","kind":6,"type":"Observable","typeP":[{"name":"T2","kind":6,"type":"T2 extends T | never"}]},{"name":"void","kind":32}]}}}],"kind":11,"flags":4,"type":54,"typeP":[{"id":578,"name":"T2","kind":3,"type":"T2 extends T | never"}]},{"id":583,"name":"debounceTime","parameters":[{"id":584,"name":"time","kind":9,"flags":524288,"type":"number"},{"id":585,"name":"timer","kind":9,"flags":524288,"type":{"id":586,"parameters":[{"id":587,"name":"delay","kind":9,"type":"number"}],"kind":17,"type":54}}],"kind":11,"flags":4,"type":54},{"id":588,"name":"distinctUntilChanged","kind":11,"flags":4,"type":54},{"id":589,"name":"exhaustMap","parameters":[{"id":591,"name":"project","kind":9,"type":{"id":592,"parameters":[{"id":593,"name":"value","kind":9,"type":"T"}],"kind":17,"type":54}}],"kind":11,"flags":4,"type":54,"typeP":[{"id":590,"name":"T2","kind":3,"type":"T2"}]},{"id":594,"name":"filter","parameters":[{"id":596,"name":"fn","kind":9,"type":{"id":597,"parameters":[{"id":598,"name":"val","kind":9,"type":"T"}],"kind":17,"type":"boolean"}}],"kind":11,"flags":4,"type":54,"typeP":[{"id":595,"name":"T2","kind":3,"type":"T2"}]},{"id":599,"name":"finalize","parameters":[{"id":600,"name":"fn","kind":9,"type":{"id":601,"kind":17,"type":"void"}}],"kind":11,"flags":4,"type":54},{"id":602,"name":"first","kind":11,"flags":4,"type":54},{"id":639,"name":"ignoreElements","kind":11,"flags":4,"type":54},{"id":603,"name":"map","parameters":[{"id":605,"name":"mapFn","kind":9,"type":{"id":606,"parameters":[{"id":607,"name":"val","kind":9,"type":"T"}],"kind":17,"type":"T2"}}],"kind":11,"flags":4,"type":54,"typeP":[{"id":604,"name":"T2","kind":3,"type":"T2"}]},{"id":608,"name":"mergeMap","parameters":[{"id":610,"name":"project","kind":9,"type":{"id":611,"parameters":[{"id":612,"name":"val","kind":9,"type":"T"}],"kind":17,"type":54}}],"kind":11,"flags":4,"type":54,"typeP":[{"id":609,"name":"T2","kind":3,"type":"T2"}]},{"id":613,"name":"publishLast","kind":11,"flags":4,"type":54},{"id":614,"name":"reduce","parameters":[{"id":616,"name":"reduceFn","kind":9,"type":{"id":617,"parameters":[{"id":618,"name":"acc","kind":9,"type":"T2"},{"id":619,"name":"val","kind":9,"type":"T"},{"id":620,"name":"i","kind":9,"type":"number"}],"kind":17,"type":"T2"}},{"id":621,"name":"seed","kind":9,"type":"T2"}],"kind":11,"flags":4,"type":54,"typeP":[{"id":615,"name":"T2","kind":3,"type":"T2"}]},{"id":622,"name":"share","kind":11,"flags":4,"type":54},{"id":623,"name":"shareLatest","kind":11,"flags":4,"type":54},{"id":624,"name":"switchMap","parameters":[{"id":626,"name":"project","kind":9,"type":{"id":627,"parameters":[{"id":628,"name":"val","kind":9,"type":"T"}],"kind":17,"type":54}}],"kind":11,"flags":4,"type":54,"typeP":[{"id":625,"name":"T2","kind":3,"type":"T2"}]},{"id":629,"name":"take","parameters":[{"id":630,"name":"howMany","kind":9,"type":"number"}],"kind":11,"flags":4,"type":54},{"id":631,"name":"takeWhile","parameters":[{"id":632,"name":"fn","kind":9,"type":{"id":633,"parameters":[{"id":634,"name":"val","kind":9,"type":"T"}],"kind":17,"type":"boolean"}}],"kind":11,"flags":4,"type":54},{"id":635,"name":"tap","parameters":[{"id":636,"name":"tapFn","kind":9,"type":{"id":637,"parameters":[{"id":638,"name":"val","kind":9,"type":"T"}],"kind":17,"type":"void"}}],"kind":11,"flags":4,"type":54},{"id":640,"name":"throttleTime","parameters":[{"id":641,"name":"number","kind":9,"type":"number"}],"kind":11,"flags":4,"type":54}],"tsconfig":"tsconfig.json"},{"id":17,"name":"ObservableError","kind":2,"type":"unknown"},{"id":52,"name":"ObservableT","kind":2,"type":"T extends Observable<infer U extends U> ? U : never","typeP":[{"id":53,"name":"T","kind":3,"type":"T"}],"resolvedType":"T extends Observable<infer U extends U, \"none\"> ? U : never"},{"id":74,"name":"Observer","kind":4,"flags":1,"typeP":[{"id":75,"name":"T","kind":3,"type":"T"}],"children":[{"id":78,"name":"complete","kind":10,"flags":524292,"docs":{"content":[{"value":"The `complete` property within the `Observer` interface is an optional method\nthat signals the successful completion of the Observable's emission sequence.\n\n- If provided, it will be invoked when the Observable has finished emitting all values without an error.\n- This is particularly useful for cleaning up resources or triggering follow-up logic."}]},"type":"CompleteFunction"},{"id":77,"name":"error","kind":10,"flags":524292,"docs":{"content":[{"value":"The `error` property within the `Observer` interface is an optional method\nthat handles errors from the Observable's execution.\n\n- Providing an error handler here allows Observers to manage exceptions locally\n  without propagating them further up the execution chain."}]},"type":"ErrorFunction"},{"id":76,"name":"next","kind":10,"flags":524292,"docs":{"content":[{"value":"The `next` property allows the observer to react to each value emitted by the Observable."}]},"type":"NextFunction"},{"id":79,"name":"signal","kind":10,"flags":524292,"docs":{"content":[{"value":"The `signal` property is an optional Observable that provides a mechanism for external cancellation."}]},"type":54}],"tsconfig":"tsconfig.json"},{"id":67,"name":"Operator","kind":2,"flags":1,"type":{"id":70,"parameters":[{"id":71,"name":"observable","kind":9,"type":54}],"kind":17,"type":54},"typeP":[{"id":68,"name":"T","kind":3,"type":"T"},{"id":69,"name":"T2","kind":3,"type":"T2"}],"resolvedType":{"id":72,"parameters":[{"id":73,"name":"observable","kind":9,"type":"Observable<T, \"none\">"}],"kind":17,"type":"Observable<T2, \"none\">"},"tsconfig":"tsconfig.json"},{"id":247,"name":"OrderedSubject","kind":8,"flags":1,"docs":{"content":[{"value":"A subject that guarantees all subscribers receive the same values in the order they were emitted."}]},"type":{"kind":33,"children":[{"kind":6,"type":207}],"type":247},"typeP":[{"id":248,"name":"T","kind":3,"type":"T"}],"children":[{"id":250,"name":"emitting","kind":10,"flags":8,"type":"boolean"},{"id":251,"name":"next","parameters":[{"id":252,"name":"a","kind":9,"type":"T"}],"kind":11,"flags":4,"type":"void"},{"id":249,"name":"queue","kind":10,"flags":8,"type":"T[]"}],"tsconfig":"tsconfig.json"},{"id":57,"name":"PickObservable","kind":2,"type":"{ [P in keyof T]: T[P] extends Observable<unknown> ? ObservableT<T[P]> : never }","typeP":[{"id":58,"name":"T","kind":3,"type":"T"}],"resolvedType":"{ [P in keyof T]: T[P] extends Observable<unknown, \"none\"> ? ObservableT<T[P]> : never }"},{"id":276,"name":"Reference","kind":8,"flags":1,"docs":{"content":[{"value":"A Reference is a behavior subject that does not require an initial value."}]},"type":{"kind":33,"children":[{"kind":6,"type":207}],"type":276},"typeP":[{"id":277,"name":"T","kind":3,"type":"T"}],"children":[{"id":278,"name":"$value","kind":10,"flags":16,"type":{"kind":5,"resolvedType":{"kind":5,"children":[{"kind":34},{"name":"T","kind":6}]},"children":[{"name":"T","kind":6,"type":"T"},{"name":"Undefined","kind":27}]}},{"id":279,"name":"hasValue","kind":12,"flags":4,"type":"boolean"},{"id":281,"name":"next","parameters":[{"id":282,"name":"val","kind":9,"type":"T"}],"kind":11,"flags":4,"type":"void"},{"id":283,"name":"onSubscribe","parameters":[{"id":284,"name":"subscription","kind":9,"type":{"id":88,"name":"Subscriber","kind":34}}],"kind":11,"flags":16,"type":"void"},{"id":280,"name":"value","kind":12,"flags":4,"type":"T"}],"tsconfig":"tsconfig.json"},{"id":262,"name":"ReplaySubject","kind":8,"flags":1,"docs":{"content":[{"value":"A variant of Subject that \"replays\" or emits old values to new subscribers.\nIt buffers a set number of values and will emit those values immediately to any\nnew subscribers in addition to emitting new values to existing subscribers."}]},"type":{"kind":33,"children":[{"kind":6,"type":207}],"type":262},"typeP":[{"id":263,"name":"T","kind":3,"type":"T"},{"id":264,"name":"ErrorT","kind":3,"type":"ErrorT"}],"children":[{"id":265,"name":"buffer","kind":10,"flags":8,"type":"T[]"},{"id":269,"name":"bufferSize","kind":10,"flags":68,"type":"number"},{"id":268,"name":"constructor","parameters":[{"id":269,"name":"bufferSize","kind":10,"flags":68,"type":"number"}],"kind":14,"type":262},{"id":270,"name":"error","parameters":[{"id":271,"name":"val","kind":9,"type":"ErrorT"}],"kind":11,"flags":4,"type":"void"},{"id":266,"name":"hasError","kind":10,"flags":8,"type":"boolean"},{"id":267,"name":"lastError","kind":10,"flags":524296,"type":"ErrorT"},{"id":272,"name":"next","parameters":[{"id":273,"name":"val","kind":9,"type":"T"}],"kind":11,"flags":4,"type":"void"},{"id":274,"name":"onSubscribe","parameters":[{"id":275,"name":"subscriber","kind":9,"type":{"id":88,"name":"Subscriber","kind":34}}],"kind":11,"flags":16,"type":"void"}],"tsconfig":"tsconfig.json"},{"id":207,"name":"Subject","kind":8,"flags":1,"docs":{"content":[{"value":"A Subject is an Observable that allows values to be\nmulticasted to many Observers."}]},"type":{"kind":33,"children":[{"kind":6,"type":54}],"type":207},"typeP":[{"id":208,"name":"T","kind":3,"type":"T"},{"id":209,"name":"ErrorT","kind":3,"type":"ErrorT"}],"children":[{"id":210,"name":"closed","kind":10,"flags":4,"type":"boolean"},{"id":228,"name":"complete","kind":11,"flags":4,"type":"void"},{"id":223,"name":"constructor","kind":14,"type":207},{"id":226,"name":"error","parameters":[{"id":227,"name":"e","kind":9,"type":"ErrorT"}],"kind":11,"flags":4,"type":"void"},{"id":224,"name":"next","parameters":[{"id":225,"name":"a","kind":9,"type":"T"}],"kind":11,"flags":4,"docs":{"content":[{"value":"Emits a new value to all active subscribers if the Subject is not in a closed state.\n- Iterates over the list of current subscribers and calls their `next` method with the provided value.\n- Inactive or closed subscribers are skipped.\n- This ensures only active subscribers receive new emissions."}]},"type":"void"},{"id":212,"name":"observers","kind":10,"flags":16,"type":"Set"},{"id":229,"name":"onSubscribe","parameters":[{"id":230,"name":"subscriber","kind":9,"type":{"id":88,"name":"Subscriber","kind":34}}],"kind":11,"flags":16,"type":"void"},{"id":211,"name":"signal","kind":10,"flags":4,"type":231}],"tsconfig":"tsconfig.json"},{"id":80,"name":"Subscribable","kind":4,"flags":1,"typeP":[{"id":81,"name":"T","kind":3,"type":"T"}],"children":[{"id":82,"name":"subscribe","parameters":[{"id":83,"name":"observer","kind":9,"type":74}],"kind":11,"flags":4,"type":99}],"tsconfig":"tsconfig.json"},{"id":32,"name":"SubscribeFunction","kind":2,"type":{"id":34,"parameters":[{"id":35,"name":"subscription","kind":9,"type":{"id":88,"name":"Subscriber","kind":34}}],"kind":17,"type":"void"},"typeP":[{"id":33,"name":"T","kind":3,"type":"T"}],"resolvedType":{"id":36,"parameters":[{"id":37,"name":"subscription","kind":9,"type":{"kind":34,"children":[{"id":43,"name":"closed","kind":10,"flags":68,"type":"boolean"},{"id":47,"name":"complete","kind":11,"flags":4,"type":"void"},{"id":38,"name":"error","kind":10,"flags":4,"type":{"id":39,"parameters":[{"id":40,"name":"e","kind":9,"type":"unknown"}],"kind":17,"type":"void"}},{"id":45,"name":"next","parameters":[{"id":46,"name":"val","kind":9,"type":"T"}],"kind":11,"flags":4,"type":"void"},{"id":44,"name":"signal","kind":10,"flags":4,"type":"CancelSignal"},{"id":41,"name":"unsubscribe","kind":10,"flags":4,"type":{"id":42,"kind":17,"type":"void"}}]}}],"kind":17,"type":"void"}},{"id":86,"name":"Subscriber","kind":2,"flags":1,"type":{"id":88,"name":"Subscriber","kind":34},"typeP":[{"id":87,"name":"T","kind":3,"type":"T"}],"resolvedType":{"kind":34,"children":[{"id":94,"name":"closed","kind":10,"flags":68,"type":"boolean"},{"id":98,"name":"complete","kind":11,"flags":4,"type":"void"},{"id":89,"name":"error","kind":10,"flags":4,"type":{"id":90,"parameters":[{"id":91,"name":"e","kind":9,"type":"unknown"}],"kind":17,"type":"void"}},{"id":96,"name":"next","parameters":[{"id":97,"name":"val","kind":9,"type":"T"}],"kind":11,"flags":4,"type":"void"},{"id":95,"name":"signal","kind":10,"flags":4,"type":"CancelSignal"},{"id":92,"name":"unsubscribe","kind":10,"flags":4,"type":{"id":93,"kind":17,"type":"void"}}]},"tsconfig":"tsconfig.json"},{"id":99,"name":"Subscription","kind":4,"flags":1,"children":[{"id":100,"name":"unsubscribe","kind":11,"flags":4,"type":"void"}],"tsconfig":"tsconfig.json"}]}